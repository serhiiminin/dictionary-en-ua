// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notification item render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationItem
    classes={Object {}}
    onClick={[Function]}
    status="exited"
    text=""
    type="error"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <li
        className="undefined undefined"
>
        <div
                className={undefined}
        >
                <pure(Error) />
                <div
                        className={undefined}
                >
                        <Jss(CloseButton)
                                onClick={[Function]}
                        />
                </div>
        </div>
        <div />
</li>,
      "in": true,
      "timeout": 400,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className={undefined}
>
            <pure(Error) />
            <div
                        className={undefined}
            >
                        <Jss(CloseButton)
                                    onClick={[Function]}
                        />
            </div>
</div>,
          <div />,
        ],
        "className": "undefined undefined",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <pure(Error) />,
              <div
                className={undefined}
>
                <Jss(CloseButton)
                                onClick={[Function]}
                />
</div>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Jss(CloseButton)
                  onClick={[Function]}
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "div",
        },
      ],
      "type": "li",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <li
          className="undefined undefined"
>
          <div
                    className={undefined}
          >
                    <pure(Error) />
                    <div
                              className={undefined}
                    >
                              <Jss(CloseButton)
                                        onClick={[Function]}
                              />
                    </div>
          </div>
          <div />
</li>,
        "in": true,
        "timeout": 400,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={undefined}
>
              <pure(Error) />
              <div
                            className={undefined}
              >
                            <Jss(CloseButton)
                                          onClick={[Function]}
                            />
              </div>
</div>,
            <div />,
          ],
          "className": "undefined undefined",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <pure(Error) />,
                <div
                  className={undefined}
>
                  <Jss(CloseButton)
                                    onClick={[Function]}
                  />
</div>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Jss(CloseButton)
                    onClick={[Function]}
/>,
                  "className": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "div",
          },
        ],
        "type": "li",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
